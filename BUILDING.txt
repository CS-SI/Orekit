Orekit can be built from source either using maven 3,
ant or eclipse.

Building with Maven 3:
 - Maven 3 can be downloaded here:
       http://maven.apache.org/download.html
 - If you are behind a proxy (which is a traditional
   setting in a corporate environment), then you need
   to configure maven to use it. This is explained
   in the maven documentation here:
   http://maven.apache.org/guides/mini/guide-proxies.html
 - run "mvn package" to automatically download all
   the required dependencies listed in the pom.xml file
   and create a file named target/orekit-x.y.jar where
   x.y is the version number

Building with Ant:
 - Ant can be downloaded here:
       http://ant.apache.org/bindownload.cgi
 - If you are behind a proxy (which is a traditional
   setting in a corporate environment), then you need
   to configure ant to use it. This is explained
   in the ant documentation here:
   http://ant.apache.org/manual/proxy.html
 - either download the Hipparchus jars from the Hipparchus project and
   put it in a lib directory just below the top-level orekit
   directory or edit the ant build.xml file to edit the get-hipparchus
   target that can automatically download Hipparchus
 - run "ant jar" to create a file named
   build/orekit-x.y.jar where x.y is the version number

Building with Eclipse:
 - Eclipse can be downloaded here:
       http://www.eclipse.org/downloads/
 - using your operating system tools, unpack the source distribution directly
   inside your Eclipse workspace
 - using Eclipse, import the project by selecting in the top level "File" menu
   the entry "Import..."
 - in the wizard that should appear, select "Maven -> Existing Maven Projects"
 - select the folder you just created in your workspace by unpacking the
   source distribution. The "pom.xml" file describing the project will be
   automatically selected. Click finish
