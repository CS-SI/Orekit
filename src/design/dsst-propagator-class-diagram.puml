' Copyright 2002-2024 CS GROUP
' Licensed to CS GROUP (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
 
@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB/CCC9C5
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11
  skinparam PackageFontSize       12
  skinparam linetype              ortho

  package org.hipparchus.ode #ECEBD8 {

    interface ODEIntegrator

  }

  package org.orekit.forces #ECEBD8 {
    class ForceModel
  }

  package org.orekit.propagation.semianalytical.dsst #ECEBD8 {

    class DSSTPropagator {
      +void setInitialState(SpacecraftState state)
      +void setInitialState(SpacecraftState state, PropagationType type)
      +void addForceModel(DSSTForceModel model)
      +void removeForceModels()
      +SpacecraftState propagate(AbsoluteDate start, AbsoluteDate target)
    }

    ODEIntegrator <--* "1" DSSTPropagator

    package forces #DDEBD8 {

      class AuxiliaryElements

      interface DSSTForceModel {
        +void initializeShortPeriodTerms(AuxiliaryElements auxiliary, PropagationType type, double[] parameters)
        +double[] getMeanElementRate(SpacecraftState state, AuxiliaryElements auxiliary, double[] parameters)
        +void updateShortPeriodTerms(double[] parameters, SpacecraftState ... meanStates)
        +EventDetector[] getEventsDetectors()
      }

      DSSTForceModel -right->  AuxiliaryElements
      DSSTForceModel <|-- DSSTZonal
      DSSTForceModel <|-- DSSTJ2SquaredClosedForm
      DSSTForceModel <|-- DSSTTesseral
      DSSTForceModel <|-- DSSTThirdBody
      DSSTForceModel <|-- AbstractGaussianContribution

      AbstractGaussianContribution <|-- DSSTAtmosphericDrag
      AbstractGaussianContribution <|-- DSSTSolarRadiationPressure
      AbstractGaussianContribution o--> "1" ForceModel : acceleration provider

    }

    DSSTPropagator "0..*" *--> DSSTForceModel
    DSSTPropagator --> AuxiliaryElements

  }


@enduml
