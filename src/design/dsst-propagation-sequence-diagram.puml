' Copyright 2002-2017 CS Systèmes d'Information
' Licensed to CS Systèmes d'Information (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
 
@startuml

  skinparam svek                                true
  skinparam NoteBackgroundColor                 #F3EFEB
  skinparam NoteBorderColor                     #691616
  skinparam NoteFontColor                       #691616
  skinparam SequenceActorBorderColor            #6A584B
  skinparam SequenceParticipantBackgroundColor  #F3EFEB/CCC9C5
  skinparam SequenceParticipantBorderColor      #6A584B
  skinparam SequenceLifeLineBackgroundColor     #CCC9C5/F3EFEB
  skinparam SequenceLifeLineBorderColor         #6A584B
  skinparam SequenceArrowColor                  #6A584B
  skinparam SequenceBorderColor                 #6A584B
  skinparam SequenceFontSize                    11

  hide footbox

  box "User application" #F3EDF7
    participant "Main" as M
  end box
  participant DSSTPropagator
  participant Integrator
  participant MainStateEquations
  participant StateMapper
  participant "DSST Force Model i" as Fi
  participant "Short Period Terms i" as SPi

  activate M
  M          -> DSSTPropagator : propagate
    activate DSSTPropagator
    DSSTPropagator -> MainStateEquations : create
      activate MainStateEquations
      deactivate MainStateEquations
    DSSTPropagator -> StateMapper : create
      activate StateMapper
      deactivate StateMapper
    DSSTPropagator -> Integrator : integrate
      loop #DDEBD8 for n steps
      activate Integrator
      loop #ECEBD8 for integrator internal stages
      Integrator -> MainStateEquations : computeDerivatives
        activate MainStateEquations
        MainStateEquations -> StateMapper : mapArrayToState(mean only)
          activate StateMapper
          deactivate StateMapper
        MainStateEquations -> Fi : getMeanElementRate
          activate Fi
          deactivate Fi
        MainStateEquations --> Integrator : state derivatives
        deactivate MainStateEquations
      end
      Integrator --> DSSTPropagator : mean state interpolator
      deactivate Integrator
      DSSTPropagator -> Fi : updateShortPeriodTerms(mean state 1, mean state 2, ...)
        activate Fi
        loop #ECEBD8 for all intermediate states within step
        Fi -> SPi : addGridPoint
          activate SPi
          deactivate SPi
        end
        deactivate Fi
      DSSTPropagator -> M : handle step
      activate M
      M -> DSSTPropagator : get state
      activate DSSTPropagator
      DSSTPropagator -> StateMapper : mapArrayToState
        activate StateMapper
        StateMapper -> SPi : value(mean state)
          activate SPi
          SPi --> StateMapper : short periods value
          deactivate SPi
        StateMapper --> DSSTPropagator : interpolated state
        deactivate StateMapper
      DSSTPropagator --> M : state
     deactivate DSSTPropagator
     deactivate M
     end
    DSSTPropagator --> M : final state
    deactivate DSSTPropagator
  deactivate M

@enduml
