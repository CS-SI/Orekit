' Copyright 2002-2021 CS GROUP
' Licensed to CS GROUP (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
 
@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB/CCC9C5
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11
  skinparam PackageFontSize       12
  skinparam linetype              ortho

  package org.orekit #ECEBD8 {

    package data #DDEBD8 {

      interface DataLoader

      interface DataProvider

      class DataProvidersManager {
        +addFilter(final DataFilter filter)
        +void clearFilters()
        +DataSource applyAllFilters(final DataSource original)
      }

      class DataSource {
      	+String getName()
      	+DataSource.StreamOpener getStreamOpener()
      }

      interface DataFilter {
         DataSource filter(DataSource original)
      }

      interface DataSource.StreamOpener {
        +InputStream openStream()
      }
      note right
        allows lazy opening of stream
      end note

      DataProvider "*" -- "1" DataProvidersManager
      DataProvider --> DataSource : create
      DataLoader <-left- DataProvider : feeds
      DataProvidersManager "1" o--> "*" DataFilter: applies
      DataSource <-down- DataFilter : filters
      DataSource --> DataSource.StreamOpener
      DataFilter <|-- GzipFilter
      DataFilter <|-- UnixFilter

      UnixFilter --> DataSource.StreamOpener : creates
      GzipFilter --> DataSource.StreamOpener : creates
 
    }

    package gnss #DDEBD8 {
      class HatanakaCompressFilter
      HatanakaCompressFilter -right-|> DataFilter
      HatanakaCompressFilter --> DataSource.StreamOpener : creates
   }

  }

@enduml
