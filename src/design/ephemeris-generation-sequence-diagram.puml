' Copyright 2002-2024 CS GROUP
' Licensed to CS GROUP (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
 
@startuml

  skinparam svek                                true
  skinparam NoteBackgroundColor                 #F3EFEB
  skinparam NoteBorderColor                     #691616
  skinparam NoteFontColor                       #691616
  skinparam SequenceActorBorderColor            #6A584B
  skinparam SequenceParticipantBackgroundColor  #F3EFEB/CCC9C5
  skinparam SequenceParticipantBorderColor      #6A584B
  skinparam SequenceLifeLineBackgroundColor     #CCC9C5/F3EFEB
  skinparam SequenceLifeLineBorderColor         #6A584B
  skinparam SequenceArrowColor                  #6A584B
  skinparam SequenceBorderColor                 #6A584B
  skinparam SequenceFontSize                    11

  hide footbox

  box "User application" #F3EDF7
    participant "Main" as U
  end box

  participant Propagator
  participant StepHandlerMultiplexer
  participant EphemerisGenerator
  participant Ephemeris

  activate U
  U                    ->           Propagator : getEphemerisGenerator()
    activate Propagator
    Propagator           ->         EphemerisGenerator : create
      activate EphemerisGenerator
      deactivate EphemerisGenerator
    Propagator           ->         StepHandlerMultiplexer : addStepHandler(generator)
      activate StepHandlerMultiplexer
      deactivate StepHandlerMultiplexer
    return generator
    deactivate Propagator
  U                    ->           Propagator : propagate
    activate Propagator
    Propagator           ->         StepHandlerMultiplexer : provide step
      activate StepHandlerMultiplexer
        StepHandlerMultiplexer  -> EphemerisGenerator : add sample
        activate EphemerisGenerator
        deactivate EphemerisGenerator
      deactivate StepHandlerMultiplexer
    Propagator           ->         StepHandlerMultiplexer : provide step
      activate StepHandlerMultiplexer
        StepHandlerMultiplexer  -> EphemerisGenerator : add sample
        activate EphemerisGenerator
        deactivate EphemerisGenerator
      deactivate StepHandlerMultiplexer
    Propagator           ->         StepHandlerMultiplexer : provide step
      activate StepHandlerMultiplexer
        StepHandlerMultiplexer  -> EphemerisGenerator : add sample
        activate EphemerisGenerator
        deactivate EphemerisGenerator
      deactivate StepHandlerMultiplexer
    return final state 
    deactivate Propagator
  U                    ->           EphemerisGenerator : getGeneratedEphemeris
    activate EphemerisGenerator
        activate EphemerisGenerator
        EphemerisGenerator -> Ephemeris : create
         activate Ephemeris
         deactivate Ephemeris
        return generated ephemeris
        deactivate EphemerisGenerator
    deactivate EphemerisGenerator
  deactivate U

@enduml
