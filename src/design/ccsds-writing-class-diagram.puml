' Copyright 2002-2024 CS GROUP
' Licensed to CS GROUP (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.

@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB/CCC9C5
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11
  skinparam PackageFontSize       12
  skinparam linetype              ortho

  package org.orekit.files #ECEBD8 {

    package general #DDEBD8 {

        interface EphemerisFile {
          +getSatellites()
        }

        interface "EphemerisFile.EphemerisSegment" as EphemerisSegment {
          +getMu()
          +getFrame()
          +getInertialFrame()
          +getInterpolationSamples()
          +getAvailableDerivatives()
          +getCoordinates()
          +getStart()
          +getStop()
          +getPropagator()
        }

        interface "EphemerisFile.SatelliteEphemeris" as SatelliteEphemeris {
          +getId()
          +getMu()
          +getSegments()
          +getStart()
          +getStop()
          +getPropagator()
        }


        interface EphemerisFileWriter

    }

    package ccsds #DDEBD8 {

      package section #CBDBC8 {
        interface Header
        class Segment
      }
      package utils #CBDBC8 {

        enum FileFormat {
          +KVN
          +XML
        }

        package generation #CCCCC7 {
          interface MessageWriter {
            +writeMessage(generator, message)
            +writeHeader(generator, header)
            +writeSegment(generator, segment)
          }
          interface Generator {
            +FileFormat getFileFormat()
            +startMessage(messageTypeKey, version)
            +writeComments(commentsContainer)
            +writeEntry(key, value, mandatory)
            +writeEmptyLine()
            +writeRawData(data)
            +enterSection(name)
            +exitSection()
            +close()
          }
          class KvnGenerator
          class XmlGenerator
        }

      }

      package ndm.odm #CBDBC8 {

        package oem #CCCCC7 {
          class StreamingOemWriter
          class OemWriter
        }

        package opm #CCCCC7 {
          class OpmWriter
        }

      }

    }

  }

  Header <-- MessageWriter
  Segment <-- MessageWriter
  Generator <|.. KvnGenerator
  Generator <|.. XmlGenerator
  MessageWriter --> Generator
  FileFormat <-left- Generator
  MessageWriter <|.. OpmWriter
  MessageWriter <|.. OemWriter
  EphemerisSegment <--o SatelliteEphemeris
  SatelliteEphemeris <--* EphemerisFile
  EphemerisFile <-- EphemerisFileWriter
  OemWriter ..|> EphemerisFileWriter
  StreamingOemWriter o-right-> OemWriter

@enduml
