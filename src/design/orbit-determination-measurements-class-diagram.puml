' Copyright 2002-2017 CS SystÃ¨mes d'Information
' Licensed to CS SystÃ¨mes d'Information (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
 
@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB/CCC9C5
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11
  skinparam PackageFontSize       12

  package org.orekit.estimation.measurements #ECEBD8 {

    interface ObservedMeasurement {
      +getDimension()
      +isEnabled()
      +setEnabled()
      +getObservedValue()
      +getParametersDrivers()
      +getTheoreticalStandardDeviation()
      +getBaseWeight()
      +addModifier(modifier)
      +getModifiers()
      +estimate(iteration, evaluation, state)
    }
    
    class EstimatedMeasurement {
      +getObservedMeasurement()
      +getIteration()
      +getState()
      +getTimeOffset()
      +[get|set]Value()
      +[get|set]CurrentWeight()
      +[get|set]StateDerivatives()
      +[get|set]ParameterDerivatives()
    }
    
    interface EstimationModifier {
      +getParametersDrivers()
      +modify(estimated)
    }
    
    class "On-board antenna" as Onboard
    ObservedMeasurement *--> "*" EstimationModifier
    ObservedMeasurement --> EstimatedMeasurement : create
    EstimatedMeasurement <-- EstimationModifier : modify
    Range              ..|> ObservedMeasurement
    RangeRate          ..|> ObservedMeasurement
    AngularAzEl        ..|> ObservedMeasurement
    AngularRaDec       ..|> ObservedMeasurement
    PV                 ..|> ObservedMeasurement
    ObservedMeasurement <|.. TurnAroundRange
    ObservedMeasurement <|.. InterSatellitesRange
    EstimationModifier <|.. Bias
    EstimationModifier <|.. OutlierFilter
    EstimationModifier <|.. Tropo
    EstimationModifier <|.. Iono
    EstimationModifier <|.. Onboard
 
  }

  package mission.specific #C4D2C5 {
    class CustomModifier #D5E0D5/E2EBE2
    class CustomMeasurement #D5E0D5/E2EBE2
    ObservedMeasurement <|-- CustomMeasurement
    EstimationModifier <|-- CustomModifier
  }

@enduml
