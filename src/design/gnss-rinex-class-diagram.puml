' Copyright 2002-2025 CS GROUP
' Licensed to CS GROUP (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.

@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB/CCC9C5
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11
  skinparam PackageFontSize       12
  skinparam linetype              ortho

  package org.orekit.gnss #ECEBD8 {

    class SatInSystem {
      -int prn
    }

    enum SatelliteSystem {
      +USER_DEFINED_A
      +USER_DEFINED_B
      +...
      +BEIDOU
      +GALILEO
      +GPS
      +IRNSS
      +QZSS
      +MIXED
      +GLONASS
      +SBAS
      +...
      +USER_DEFINED_Z
    }

    interface GnssSignal {
      +F0
      +double getRatio()
      +String getName()
      +SatelliteSystem getSatelliteSystem()
    }

    interface RadioWave {
      +double getFrequency()
      +double getWavelength()
      +boolean closeTo(other)
      +boolean closeTo(other, tolerance)
    }

    enum PredefinedGnssSignal {
      +G01
      +...
      +J06
      +...
      +S05
    }

    SatInSystem     *-right-> SatelliteSystem
    SatelliteSystem <--       GnssSignal
    GnssSignal       ..|>     RadioWave
    GnssSignal     <|--       PredefinedGnssSignal

  }

  package org.orekit.files.rinex #ECEBD8 {
  
    class "RinexFile<T extends RinexBaseHeader>" as RinexFile {
      +T getHeader()
      +List<RinexComment> getComments()
    }

    package observation #DDEBD8 {

      class RinexObservationParser {
       +RinexObservation parse(dataSource)
      }
      class RinexObservationWriter {
        +write(RinexObservation)
      }

      interface ObservationType {
        +getMeasurementType()
        +getFrequency(SatelliteSystem)
      }

      enum PredefinedObservationType {
        +C1
        +C5
        +C6
        ...
        +L1C
        ...
        +S8X
      }
      
      enum MeasurementType {
        +PSEUDO_RANGE
        +CARRIER_PHASE
        +DOPPLER
        +SIGNAL_STRENGTH
        +COMBINED_RANGE_PHASE
      }

      class ObservationData {
        +ObservationType getObservationType()
        +double getValue()
      }
      
      class ObservationDataSet {
        +AbsoluteDate getDate()
        +SatInSystem getSatellite()
        +int getEventFlag()
        +double getRcvrClkOffset()
        +List<ObservationData> getObservationData()
      }

      ObservationDataSet         *-left->  "1" SatInSystem
      RinexObservationHeader     *-->      "*" SatInSystem
      RinexObservationHeader     *-->      "*" ObservationType
      RinexObservation           *-->      "*" ObservationDataSet
      RinexObservation           *-->      "1" RinexObservationHeader
      ObservationDataSet         *-->      "*" ObservationData
      ObservationData            *-right-> "1" ObservationType
      ObservationType            *-->      "1" MeasurementType
      ObservationType            *-->      "*" PredefinedGnssSignal
      ObservationType           <|..           PredefinedObservationType
      RinexObservationParser     -->           RinexObservation
      RinexObservationWriter     -->           RinexObservation
      RinexFile                 <|-left-       RinexObservation

    }

  }

@enduml

