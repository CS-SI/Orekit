' Copyright 2002-2024 CS GROUP
' Licensed to CS GROUP (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.

@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB/CCC9C5
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11
  skinparam PackageFontSize       12
  skinparam linetype              ortho

  package org.orekit.gnss #ECEBD8 {
    class SatInSystem
    
    enum Frequency {
      +G01
      +...
      +J06
      +...
      +S05
      +String getName()
      +SatelliteSystem getSatelliteSystem()
      +double getRatio()
      +double getMHzFrequency()
    }
  }

  package org.orekit.files.rinex #ECEBD8 {
  
    class "RinexFile<T extends RinexBaseHeader>" as RinexFile {
      +T getHeader()
      +List<RinexComment> getComments()
    }

    package observation #DDEBD8 {

      class RinexObservationParser

      enum ObservationType {
        +C1
        +C5
        +C6
        ...
        +L1C
        ...
        +S8X
        +getMeasurementType()
        +getFrequency(SatelliteSystem)
      }
      
      enum MeasurementType {
        +PSEUDO_RANGE
        +CARRIER_PHASE
        +DOPPLER
        +SIGNAL_STRENGTH
        +COMBINED_RANGE_PHASE
      }

      class ObservationData {
        +ObservationType getObservationType()
        +double getValue()
      }
      
      class ObservationDataSet {
        +AbsoluteDate getDate()
        +SatInSystem getSatellite()
        +int getEventFlag()
        +double getRcvrClkOffset()
        +List<ObservationData> getObservationData()
      }

      ObservationDataSet         *-left-> "1" SatInSystem
      RinexObservationHeader     *-->     "1" SatInSystem
      RinexObservationHeader "*" <--*         ObservationDataSet
      RinexObservation           *-->     "*" ObservationDataSet
      ObservationDataSet         *-->     "*" ObservationData
      ObservationType        "1" <-left-*     ObservationData
      ObservationType            *-->     "1" MeasurementType
      ObservationType            *-->     "*" Frequency
      RinexObservation           --|>         RinexFile

    }

  }

@enduml

