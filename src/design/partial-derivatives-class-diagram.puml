' Copyright 2002-2024 CS GROUP
' Licensed to CS GROUP (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
 
@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB/CCC9C5
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11
  skinparam PackageFontSize       12
  skinparam linetype              ortho

  package org.orekit.propagation #ECEBD8 {

    interface Propagator {
      + SpacecraftState propagate(AbsoluteDate target)
      +MatrixHarvester setupMatricesComputation(name, initialSTM, initialJacobian)
    }

    interface MatricesHarvester {
      +void setReferenceState(SpacecraftState state)
      +RealMatrix getStateTransitionMatrix(SpacecraftState state)
      +RealMatrix getParametersJacobian(SpacecraftState state)
      +List<String> getJacobiansColumnsNames()
    }

    Propagator -right-> MatricesHarvester

    package integration #DDEBD8 {
      class  AbstractIntegratedPropagator {
       +void addAdditionalDerivativesProvider(AdditionalDerivativesProvider provider)
      }
      interface AdditionalDerivativesProvider {
        +String getName()
        +yield()
        +void derivatives()
      }
      AbstractIntegratedPropagator o--> AdditionalDerivativesProvider : providers
      Propagator <|.. AbstractIntegratedPropagator
    }

    package numerical #DDEBD8 {

       class NumericalPropagationHarvester

       class StateTransitionMatrixGenerator {
         -List<ForceModel> forceModels
       }

       class IntegrableJacobianColumnGenerator {
         -String columnName
       }

       class NumericalPropagator

       MatricesHarvester <|.. NumericalPropagationHarvester
       AbstractIntegratedPropagator <|-- NumericalPropagator
       StateTransitionMatrixGenerator <--o NumericalPropagator
       IntegrableJacobianColumnGenerator <--o NumericalPropagator
       NumericalPropagationHarvester <--o NumericalPropagator

       AdditionalDerivativesProvider <|.. StateTransitionMatrixGenerator
       AdditionalDerivativesProvider <|.. IntegrableJacobianColumnGenerator

    }

  }

@enduml
