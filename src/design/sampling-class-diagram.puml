' Copyright 2002-2017 CS Systèmes d'Information
' Licensed to CS Systèmes d'Information (CS) under one or more
' contributor license agreements.  See the NOTICE file distributed with
' this work for additional information regarding copyright ownership.
' CS licenses this file to You under the Apache License, Version 2.0
' (the "License"); you may not use this file except in compliance with
' the License.  You may obtain a copy of the License at
'
'   http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
 
@startuml

  skinparam svek                  true
  skinparam ClassBackgroundColor  #F3EFEB/CCC9C5
  skinparam ClassArrowColor       #691616
  skinparam ClassBorderColor      #691616
  skinparam NoteBackgroundColor   #F3EFEB
  skinparam NoteBorderColor       #691616
  skinparam NoteFontColor         #691616
  skinparam ClassFontSize         11
  skinparam PackageFontSize       12

  package org.orekit.propagation #ECEBD8 {

    interface Propagator {
      +int getMode()
      +void setSlaveMode()
      +void setMasterMode(double h, OrekitFixedStepHandler handler)
      +void setMasterMode(OrekitStepHandler handler)
      +void setEphemerisMode()
      +BoundedPropagator getGeneratedEphemeris()
    }

    package sampling #DDEBD8 {

      interface OrekitStepHandler {
        +void init(SpacecraftState s0, AbsoluteDate t)
        +void handleStep(OrekitStepInterpolator interpolator, boolean isLast)
      }

      interface OrekitFixedStepHandler {
        +void init(SpacecraftState s0, AbsoluteDate t)
        +void handleStep(SpacecraftState currentState, boolean isLast)
      }

      interface OrekitStepInterpolator {
        +SpacecraftState getCurrentState()
        +SpacecraftState getPreviousState()
        +SpacecraftState getInterpolatedState(AbsoluteDate date)
        +boolean isForward()
      }

      OrekitStepHandler <-down- Propagator : step handler
      OrekitStepInterpolator <-down- OrekitStepHandler : interpolator
      OrekitFixedStepHandler <-- Propagator : step handler

    }

  }

@enduml
